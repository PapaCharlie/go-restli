/*
DO NOT EDIT

Code automatically generated by github.com/PapaCharlie/go-restli
Source file: /Users/pchesnai/code/personal/go-restli/internal/tests/testdata/extra-test-suite/restspecs/extras.collectionWithAnnotations.restspec.json
*/

package collectionwithannotations

import (
	"context"
	testsuite "github.com/PapaCharlie/go-restli/internal/tests/native/testsuite"
	extras "github.com/PapaCharlie/go-restli/internal/tests/testdata/generated_extras/extras"
	protocol "github.com/PapaCharlie/go-restli/protocol"
	batchkeyset "github.com/PapaCharlie/go-restli/protocol/batchkeyset"
	restlicodec "github.com/PapaCharlie/go-restli/protocol/restlicodec"
)

type Client interface {
	Create(entity *extras.MultiplePrimitiveFields) (createdEntity *protocol.CreatedEntity[testsuite.Temperature], err error)
	CreateWithContext(ctx context.Context, entity *extras.MultiplePrimitiveFields) (createdEntity *protocol.CreatedEntity[testsuite.Temperature], err error)
	Update(key testsuite.Temperature, entity *extras.MultiplePrimitiveFields) (err error)
	UpdateWithContext(ctx context.Context, key testsuite.Temperature, entity *extras.MultiplePrimitiveFields) (err error)
	PartialUpdate(key testsuite.Temperature, entity *extras.MultiplePrimitiveFields_PartialUpdate) (err error)
	PartialUpdateWithContext(ctx context.Context, key testsuite.Temperature, entity *extras.MultiplePrimitiveFields_PartialUpdate) (err error)
}

type client struct {
	protocol.CollectionClient[testsuite.Temperature, *extras.MultiplePrimitiveFields, *extras.MultiplePrimitiveFields_PartialUpdate]
}

func NewClient(c *protocol.RestLiClient) Client {
	return &client{protocol.CollectionClient[testsuite.Temperature, *extras.MultiplePrimitiveFields, *extras.MultiplePrimitiveFields_PartialUpdate]{
		SimpleClient: protocol.SimpleClient[*extras.MultiplePrimitiveFields, *extras.MultiplePrimitiveFields_PartialUpdate]{
			RestLiClient:            c,
			EntityUnmarshaler:       extras.UnmarshalRestLiMultiplePrimitiveFields,
			CreateAndReadOnlyFields: CreateAndReadOnlyFields,
		},
		KeyUnmarshaler:   testsuite.UnmarshalRestLiTemperature,
		ReadOnlyFields:   ReadOnlyFields,
		CreateOnlyFields: CreateOnlyFields,
		BatchKeySetProvider: func() batchkeyset.BatchKeySet[testsuite.Temperature] {
			return batchkeyset.NewSimpleKeySet(testsuite.UnmarshalRestLiTemperature)
		},
	}}
}

type resourcePath struct{}

func (rp *resourcePath) ResourcePath() (path string, err error) {
	writer := restlicodec.NewRor2PathWriter()

	writer.RawPathSegment("/collectionWithAnnotations")
	return writer.Finalize(), nil
}

func (rp *resourcePath) RootResource() string {
	return "collectionWithAnnotations"
}

type resourceEntityPath struct {
	key testsuite.Temperature
}

func (rp *resourceEntityPath) ResourcePath() (path string, err error) {
	writer := restlicodec.NewRor2PathWriter()
	writer.RawPathSegment("/collectionWithAnnotations/")
	err = rp.key.MarshalRestLi(writer)
	if err != nil {
		return "", err
	}

	return writer.Finalize(), nil
}

func (rp *resourceEntityPath) RootResource() string {
	return "collectionWithAnnotations"
}

var (
	ReadOnlyFields = restlicodec.NewPathSpec(
		"field1",
	)
	CreateOnlyFields = restlicodec.NewPathSpec(
		"field2",
	)
	CreateAndReadOnlyFields = restlicodec.NewPathSpec(
		"field1",
		"field2",
	)
)
